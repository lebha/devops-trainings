heat_template_version: 2015-04-30
description: Template for creating the Kubernetes cluster


parameters:

  image_name:
    type: string
    label: Image Name
    default: phs-centos7-cloudimage-latest
    constraints:
      - custom_constraint: glance.image

  instance_type:
    type: string
    label: Instance Type
    default: "m1.small"

  keypair_name:
    type: string
    label: Keypair name

  public_key:
    type: string
    label: public key

  floating_pool:
    type: string
    label: Floating pool name (for instance floating ip)
    default: "int-net"
    constraints:
      - custom_constraint: neutron.network

  subnet_pool:
    type: string
    label: "The ID of the subnetpool to use"
    default: "tenant-subnetpool4"

  nameservers:
    type: comma_delimited_list
    label: Nameservers for the k8s subnet
    default: 195.74.0.47,195.197.54.100


resources:

  network:
    type: OS::Neutron::Net
    properties:
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'net']
        ]
      }

  subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: network }
      subnetpool: { get_param: subnet_pool }
      dns_nameservers: { get_param: nameservers }
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'subnet']
        ]
      }

  router:
    type: OS::Neutron::Router
    properties:
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'router']
        ]
      }
      external_gateway_info:
        network: { get_param: floating_pool }

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet }

  keypair:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: keypair_name }
      public_key: { get_param: public_key }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'sg']
        ]
      }
      rules: [
        {protocol: udp,
        remote_mode: remote_group_id,
        port_range_min: 1,
        port_range_max: 65535},
        {protocol: tcp,
        remote_mode: remote_group_id,
        port_range_min: 1,
        port_range_max: 65535},
        {protocol: tcp,
        remote_ip_prefix: "0.0.0.0/0",
        port_range_min: 22,
        port_range_max: 22}]

  instance:
    type: OS::Nova::Server
    properties:
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'instance']
        ]
      }
      image: { get_param: image_name }
      flavor: m1.small
      availability_zone: zone-2
      key_name: { get_resource: keypair }
      networks:
      - port: { get_resource: instance_port }

  instance_port:
    type: OS::Neutron::Port
    properties:
      name: {
        list_join: [
          '-',
          [{ get_param: 'OS::stack_name' }, 'instance', 'port']
        ]
      }
      network: { get_resource: network }
      security_groups:
        - { get_resource: security_group }

  instance_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: floating_pool }
      port_id: { get_resource: instance_port }


outputs:

  floating_ip:
    description: instance public ip
    value: { get_attr: [ instance_floating_ip, floating_ip_address ] }

